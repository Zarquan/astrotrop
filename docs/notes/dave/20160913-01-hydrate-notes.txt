#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Login to the VM host
# [user@desktop]

    ssh Zarquan@dell-three

# -----------------------------------------------------
# List the VMs
# [user@dell-three]

    source ${HOME}/helio.settings

    virsh \
        -c ${connection:?} \
        list --all

# -----------------------------------------------------
# Create a new VM
# [user@dell-three]

    createvm

        INFO : Node name [Delshy]
        INFO : Base name [fedora-23-docker-20160701.qcow]
        INFO : Base path [/var/lib/libvirt/images/base/fedora-23-docker-20160701.qcow]
        INFO : Disc name [Delshy.qcow]
        INFO : Disc size [16GiB]

# -----------------------------------------------------
# Login to the VM
# [user@dell-three]

    ssh root@192.168.30.02

# -----------------------------------------------------
# Update our docker engine.
# [root@virtual]

    dnf update -y docker-engine

# -----------------------------------------------------
# Install Git.
# [root@virtual]

    dnf install -y git

    apt-get update
    apt-get install --assume-yes git

# -----------------------------------------------------
# Create our local directory.
# [root@virtual]

    mkdir -p /var/local
    chgrp users  /var/local
    chmod g+rwsx /var/local

# -----------------------------------------------------
# Create our docker user.
# [root@virtual]

    username=stevedore

    useradd "${username:?}" -G users -G docker

    usermod --lock "${username:?}"

    userhome=$(getent passwd "${username:?}" | cut -d: -f6)

    mkdir -p "${userhome:?}/.ssh"

    cp "${HOME}/.ssh/authorized_keys" \
       "${userhome:?}/.ssh"

    chown -R "$(id -u ${username:?})" "${userhome:?}/.ssh"
    chgrp -R "$(id -g ${username:?})" "${userhome:?}/.ssh"
    chmod u=rxw,g=,o= "${userhome:?}/.ssh"

# -----------------------------------------------------
# Reboot our virtual machine.
# [root@virtual]

    reboot

# -----------------------------------------------------
# Login to the VM
# [user@dell-three]

    ssh stevedore@192.168.30.02
    ssh root@192.168.30.02

# -----------------------------------------------------
# Install our source code.
# [user@virtual]

    if [ ! -e /var/local/astrotrop ]
    then
        mkdir /var/local/astrotrop
    fi

    pushd /var/local/astrotrop
        if [ ! -e github ]
        then
            git clone 'git@github.com:astrotrop/astrotrop.git' github
        else
            pushd github
                git pull
            popd
        fi
    popd

# -----------------------------------------------------
# Build our base containers.
# [user@virtual]

    version=1.2

    pushd /var/local/astrotrop
        pushd github/src/docker/base

            docker build \
                --tag "astrotrop/fedora:${version:?}" \
                fedora

            docker build \
                --tag "astrotrop/apache-base:${version:?}" \
                apache/base

            docker build \
                --tag "astrotrop/apache-proxy:${version:?}" \
                apache/proxy

            docker build \
                --tag "astrotrop/apache-wsgi:${version:?}" \
                apache/wsgi

            docker build \
                --tag "astrotrop/java:${version:?}" \
                java

            docker build \
                --tag "astrotrop/tomcat:${version:?}" \
                tomcat

            docker build \
                --tag "astrotrop/postgis:${version:?}" \
                postgis

        popd
    popd

# -----------------------------------------------------
# Build our geo containers.
# [user@virtual]

    pushd /var/local/astrotrop
        pushd github/src/docker/geo

            docker build \
                --tag "astrotrop/geoserver:${version:?}" \
                geoserver            

            docker build \
                --tag "astrotrop/geonode:${version:?}" \
                geonode            

        popd
    popd

# -----------------------------------------------------
# Build our R containers.
# [user@virtual]

    pushd /var/local/astrotrop
        pushd github/src/docker/R

# Only do this once, after that just re-tag.
            docker build \
                --file rstudio/Dockerbase \
                --tag "astrotrop/rstudio-base:${version:?}" \
                rstudio

            docker build \
                --file rstudio/Dockerfile \
                --tag "astrotrop/rstudio-full:${version:?}" \
                rstudio

        popd
    popd

# -----------------------------------------------------
# Install our containers.
# [user@virtual]

    Install PostGIS.
    docs/notes/dave/20160913-02-geobase-deploy.txt

    Install GeoServer
    docs/notes/dave/20160913-03-geoserv-deploy.txt

    Install GeoNode
    docs/notes/dave/20160913-04-geonode-deploy.txt

    Install RStudio
    docs/notes/dave/20160914-01-rstudio-deploy.txt

    Install ApacheProxy
    docs/notes/dave/20160914-02-proxy-deploy.txt




