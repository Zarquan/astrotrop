#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Update services to 1.2
    
    #
    # GoeNode - Use the same container to configure the service and database.

    #
    # Install full stack - PostGIS, RStudio, GeoServer, GeoNode

    #
    # Individual data directories, plus a shared directory.

        /data/shared

        /data/rstudio

        /data/postgis

        /data/geoserv

        /data/geonode


    #
    # Python code in geonode/settings.py
    # Load more settings from a file called local_settings.py if it exists
    try:
        from local_settings import *  # noqa
    except ImportError:
        pass


# -----------------------------------------------------
# Test installing GeoNode using 2.4 release from GitHub.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    docker run \
        -it \
        --rm \
        --link "${postgisname:?}:${postgislink:?}" \
        --link "${postgisname:?}:${postgislink:?}" \
        --link "${geoservname:?}:${geoservlink:?}" \
        "astrotrop/geonode:${dockerset:?}" \
        bash

    mkdir temp
    pushd temp

        tarfile=geonode-2.4.tar.gz
        wget -O "${tarfile:?}" https://github.com/GeoNode/geonode/archive/2.4.tar.gz

        tar -ztvf "${tarfile:?}"

        tar -xvzf "${tarfile:?}"

    popd

# -----------------------------------------------------
# Re-build the container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd ${astrotropsrc:?}

        git pull
        
        docker build \
            --tag "astrotrop/geonode:${dockerset:?}" \
            src/docker/geo/geonode/
            
    popd

# -----------------------------------------------------
# Test config script.
#[root@virtual]

    source "${HOME:?}/postenv"
    source "${HOME:?}/astrotrop.conf"

    geonodeenv=$(mktemp)
    cat > "${geonodeenv:?}" << EOF

POSTGIS_HOSTNAME=${postgislink:?}
POSTGIS_DATABASE=${postgisdatabase:?}
POSTGIS_USERNAME=${postgisusername:?}
POSTGIS_PASSWORD=${postgispassword:?}

SITEURL=http://geonode-05.metagrid.xyz:8000/

DATABASE_NAME=${geonodedatabase:?}
DATABASE_HOST=${postgislink:?}
DATABASE_PORT=5432
DATABASE_USER=${geonodeusername:?}
DATABASE_PASS=${geonodepassword:?}

DATASTORE_NAME=${geonodedatastore:?}
DATASTORE_HOST=${postgislink:?}
DATASTORE_PORT=5432
DATASTORE_USER=${geonodeusername:?}
DATASTORE_PASS=${geonodepassword:?}

OGC_SERVER_LOCAL=http://${geoservlink}:8080/geoserver/
OGC_SERVER_PUBLIC=http://geonode-05.metagrid.xyz:8080/geoserver/
OGC_SERVER_USER=astrotrop
OGC_SERVER_PASS=#########

EOF


    source "${HOME:?}/astrotrop.conf"
    docker run \
        -it \
        --env-file "${geonodeenv:?}" \
        --link "${postgisname:?}:${postgislink:?}" \
        "astrotrop/geonode:${dockerset:?}" \
        bash

        cat > ~/.pgpass << EOF
${POSTGIS_HOSTNAME:?}:*:*:${POSTGIS_USERNAME:?}:${POSTGIS_PASSWORD:?}
EOF
        chmod u=rw,g=,o= ~/.pgpass

        psql \
            --host "${POSTGIS_HOSTNAME:?}" \
            --username "${POSTGIS_USERNAME:?}" \
            --dbname "${POSTGIS_DATABASE}" \
            << EOF

            CREATE USER     ${DATABASE_USER:?}  WITH LOGIN PASSWORD '${DATABASE_PASS:?}' ;
            CREATE DATABASE ${DATABASE_NAME:?}  WITH OWNER ${DATABASE_USER:?} ;
            CREATE DATABASE ${DATASTORE_NAME:?} WITH OWNER ${DATABASE_USER:?} ;

            \c ${DATASTORE_NAME:?}

            CREATE EXTENSION postgis ;
            GRANT ALL ON geometry_columns TO PUBLIC ;
            GRANT ALL ON spatial_ref_sys  TO PUBLIC ;

EOF

        pushd /geonode
        
            python manage.py syncdb --noinput

            python manage.py createsuperuser

                Username: SuperUser
                Email address: super@example.com
                Password: 
                Password (again): 
                Superuser created successfully.

#    #
#    # https://docs.djangoproject.com/es/1.9/ref/django-admin/#createsuperuser
#    python manage.py \
#        createsuperuser \
#            --username USERNAME \
#            --email grumbles@example.com
#
#    #
#    # https://docs.djangoproject.com/es/1.9/ref/django-admin/#changepassword
#    python manage.py \
#        changepassword \
#            USERNAME
#

#
# Full Python solution
# http://stackoverflow.com/a/6244481
# http://stackoverflow.com/a/22722410

        popd
    exit


    source "${HOME:?}/astrotrop.conf"
    docker run \
        --detach \
        --publish 8000:8000 \
        --name "${geonodename:?}" \
        --env-file "${geonodeenv:?}" \
        --link "${postgisname:?}:${postgislink:?}" \
        --link "${geoservname:?}:${geoservlink:?}" \
        "astrotrop/geonode:${dockerset:?}"

    source "${HOME:?}/astrotrop.conf"
    docker logs -f \
        "${geonodename:?}"


    source "${HOME:?}/astrotrop.conf"
    docker exec -it \
        "${geonodename:?}" \
        bash






