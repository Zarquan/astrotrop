#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create a new VM

    # Digital Ocean

# -----------------------------------------------------
# Install admin tools.
# [user@virtual]

    apt-get update

    apt-get install --assume-yes git

    apt-get install --assume-yes pwgen

# -----------------------------------------------------
# Configure our build.
# [user@virtual]

    cat > "${HOME:?}/astrotrop.conf" << EOF

        version=1.3
        netname=baltic

        project=/var/local/astrotrop
        tempdir=\${project:?}/temp
        datadir=\${project:?}/data
        demodir=\${project:?}/demo

        tomcatuid=995:994

        dnsbase=metagrid.xyz
        dnsname=gamma
        dnsfull=\${dnsname:?}.\${dnsbase}

        dockeruser=stevedore

EOF

# -----------------------------------------------------
# Create our local directory.
# [root@virtual]

    mkdir -p /var/local
    chgrp users  /var/local
    chmod g+rwsx /var/local

# -----------------------------------------------------
# Create our docker user.
# [root@virtual]

    source "${HOME:?}/astrotrop.conf"

    useradd "${dockeruser:?}" -G users -G docker

    usermod --lock "${dockeruser:?}"

    dockerhome=$(getent passwd "${dockeruser:?}" | cut -d: -f6)

    if [ ! -e "${dockerhome:?}" ]
    then
        mkdir -p "${dockerhome:?}"
        chown -R "$(id -u  ${dockeruser:?})" "${dockerhome:?}"
        chgrp -R "$(id -g  ${dockeruser:?})" "${dockerhome:?}"
        chmod u=rxw,g=,o= "${dockeruser:?}"
    fi
    
    if [ ! -e "${dockerhome:?}/.ssh" ]
    then
        mkdir -p "${dockerhome:?}/.ssh"
        chown -R "$(id -u  ${dockeruser:?})" "${dockerhome:?}/.ssh"
        chgrp -R "$(id -g  ${dockeruser:?})" "${dockerhome:?}/.ssh"
        chmod u=rxw,g=,o= "${dockeruser:?}/.ssh"
    fi

    cp "${HOME}/.ssh/authorized_keys" \
       "${dockerhome:?}/.ssh"

    chown "$(id -u  ${dockeruser:?})" "${dockerhome:?}/.ssh/authorized_keys"
    chgrp "$(id -g  ${dockeruser:?})" "${dockerhome:?}/.ssh/authorized_keys"
    chmod u=rw,g=,o= "${dockerhome:?}/.ssh/authorized_keys"

# -----------------------------------------------------
# Install our source code.
# [user@virtual]

    source "${HOME:?}/astrotrop.conf"

    if [ ! -e "${project:?}" ]
    then
        mkdir "${project:?}"
    fi

    pushd "${project:?}"
        if [ ! -e github ]
        then
            git clone 'git@github.com:astrotrop/astrotrop.git' github
        else
            pushd github
                git pull
            popd
        fi
    popd

# -----------------------------------------------------
# Create our data directories.
# [user@virtual]

    source "${HOME:?}/astrotrop.conf"

cat > "${HOME:?}/dirtools" << 'EOF'

    rmdata()
        {
        local path=${1:?}
        if [ -e "${path}" ]
        then
            rm -rf "${path}"
        fi
        }

    mkdata()
        {
        local path=${1:?}
        local user=${2:-}
        if [ ! -e "${path}" ]
        then
            mkdir --parents "${path:?}"
        fi
        if [ -n "${user:-}" ]
        then
            chown -R "${user:?}" "${path:?}"
        fi

        # Only if SELinux enabled        
        # chcon -t svirt_sandbox_file_t "${path:?}"

        }

EOF

    source "${HOME:?}/dirtools"

    rmdata "${tempdir:?}"
    rmdata "${datadir:?}"
    rmdata "${demodir:?}"

    mkdata "${tempdir:?}"
    mkdata "${datadir:?}"
    mkdata "${demodir:?}"

# -----------------------------------------------------
# Build our base containers.
# [user@virtual]

    source "${HOME:?}/astrotrop.conf"

    pushd /var/local/astrotrop
        pushd github/src/docker/base

            docker build \
                --tag "astrotrop/fedora:${version:?}" \
                fedora

            docker build \
                --tag "astrotrop/apache-base:${version:?}" \
                apache/base

            docker build \
                --tag "astrotrop/apache-proxy:${version:?}" \
                apache/proxy

            docker build \
                --tag "astrotrop/apache-wsgi:${version:?}" \
                apache/wsgi

            docker build \
                --tag "astrotrop/java:${version:?}" \
                java

            docker build \
                --tag "astrotrop/tomcat:${version:?}" \
                tomcat

            docker build \
                --tag "astrotrop/postgis:${version:?}" \
                postgis

        popd
    popd

# -----------------------------------------------------
# Build our geo containers.
# [user@virtual]

    pushd /var/local/astrotrop
        pushd github/src/docker/geo

            docker build \
                --tag "astrotrop/geoserv:${version:?}" \
                geoserver            

            docker build \
                --tag "astrotrop/geonode:${version:?}" \
                geonode            

        popd
    popd

# -----------------------------------------------------
# Build our R containers.
# [user@virtual]

    pushd /var/local/astrotrop
        pushd github/src/docker/R

# Only do this once, after that just re-tag.
            docker build \
                --file rstudio/Dockerbase \
                --tag "astrotrop/rstudio-base:${version:?}" \
                rstudio

            docker build \
                --file rstudio/Dockerfile \
                --tag "astrotrop/rstudio-full:${version:?}" \
                rstudio

        popd
    popd


# -----------------------------------------------------
# Push our containers to Docker.
# [user@virtual]

    docker login

    docker push "astrotrop/fedora:${version:?}"

    docker push "astrotrop/apache-base:${version:?}"
    docker push "astrotrop/apache-proxy:${version:?}"
    docker push "astrotrop/apache-wsgi:${version:?}"

    docker push "astrotrop/java:${version:?}"
    docker push "astrotrop/tomcat:${version:?}"

    docker push "astrotrop/postgis:${version:?}"

    docker push "astrotrop/geoserv:${version:?}"
    docker push "astrotrop/geonode:${version:?}"

    docker push "astrotrop/rstudio-base:${version:?}"
    docker push "astrotrop/rstudio-full:${version:?}"


# -----------------------------------------------------
# Create our Docker network.
#[user@virtual]

    source "${HOME:?}/astrotrop.conf"

    docker network \
        create \
        --driver bridge \
        "${netname:?}"

