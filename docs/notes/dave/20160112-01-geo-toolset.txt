#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


# -----------------------------------------------------
# Create our virtual machine.
#[user@desktop]

    ischnura-createvm

        INFO : Node name [kappa]
        INFO : Base name [fedora-21-16G-20150407.qcow]
        INFO : Base path [/var/lib/libvirt/images/base/fedora-21-16G-20150407.qcow]
        INFO : Disc name [kappa.qcow]
        INFO : Disc size [16GiB]

# -----------------------------------------
# Install admin tools.
#[root@virtual]

    yum -y install htop
    yum -y install pwgen
    
# -----------------------------------------------------
# Install and start the HAVEGE entropy generator.
# http://redmine.roe.ac.uk/issues/828
# http://blog-ftweedal.rhcloud.com/2014/05/more-entropy-with-haveged/
# http://stackoverflow.com/questions/26021181/not-enough-entropy-to-support-dev-random-in-docker-containers-running-in-boot2d/
#[root@virtual]

    yum install -y haveged
    systemctl enable haveged.service
    systemctl start  haveged.service

# -----------------------------------------------------
# Install and run Docker.
#[root@virtual]

    #
    # Install a specific version to avoid problems with updated storage driver.
    yum -y install https://kojipkgs.fedoraproject.org//packages/docker-io/1.6.2/3.gitc3ca5bb.fc21/x86_64/docker-io-1.6.2-3.gitc3ca5bb.fc21.x86_64.rpm
    systemctl enable docker.service
    systemctl start  docker.service
    systemctl status docker.service

# -----------------------------------------------------
# Disable SELinux.
# chown: changing ownership of ‘/var/lib/postgresql/data’: Permission denied
#[root@virtual]

    setenforce permissive

    sed -i '
        s/^SELINUX=.*$/SELINUX=permissive/
        ' /etc/selinux/config

# -----------------------------------------------------
# Configure our build.
#[root@virtual]

    cat > "${HOME:?}/astrotrop.conf" << EOF

        project=/var/local/astrotrop
        tempdir=\${project:?}/temp
        datadir=\${project:?}/data

        tomcatuid=995:994

EOF

# -----------------------------------------
# Install source control tools.
#[root@virtual]

    yum -y install git

# -----------------------------------------------------
# Clone our source code.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    if [ ! -e "${project:?}/github" ]
    then
        mkdir --parent "${project:?}"
        pushd "${project:?}"
            git clone https://github.com/astrotrop/astrotrop.git github
        popd
    else
        pushd "${project:?}/github"
            git pull
        popd
    fi

# -----------------------------------------------------
# Build our base containers.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${project:?}/github"
        pushd src/docker

            docker build \
                --tag astrotrop/fedora:22.1 \
                base/fedora

            docker build \
                --tag astrotrop/apache:1.0 \
                base/apache

            docker build \
                --tag astrotrop/postgis:2.1 \
                base/postgis

            docker build \
                --tag astrotrop/java:8.1 \
                base/java

            docker build \
                --tag astrotrop/tomcat:8.30 \
                base/tomcat

        popd
    popd
    
# -----------------------------------------------------
# Build our RStudio container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${project:?}/github"
        pushd src/docker

            docker build \
                --tag astrotrop/rstudio:1.0 \
                R/rstudio

        popd
    popd

# -----------------------------------------------------
# Build our GeoServer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${project:?}/github"
        pushd src/docker

            docker build \
                --tag astrotrop/geoserver:1.0 \
                geo/geoserver

        popd
    popd

# -----------------------------------------------------
# Build our GeoExplorer container.
#[root@virtual]

    #
    # Use firethorn Maven container to build source code.
    # Use Maven Docker plugin to create container.
    #

# -----------------------------------------------------
# Build our CKAN containers.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${project:?}/github"
        pushd src/docker

            docker build \
                --tag astrotrop/redis:1.0 \
                ckan/redis

            docker build \
                --tag astrotrop/solr:1.0 \
                ckan/solr

            ########
            docker build \
                --tag astrotrop/postgres:1.0 \
                ckan/postgres

            docker build \
                --tag astrotrop/push:1.0 \
                ckan/push

            docker build \
                --tag astrotrop/ckan:1.0 \
                ckan/ckan

        popd
    popd

# -----------------------------------------------------
# Create our data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    rmdata()
        {
        local path=${1:?}
        if [ -e "${path}" ]
        then
            rm -rf "${path}"
        fi
        }

    mkdata()
        {
        local path=${1:?}
        local user=${2:-}
        if [ ! -e "${path}" ]
        then
            mkdir --parents "${path:?}"
        fi
        if [ -n "${user:-}" ]
        then
            chown -R "${user:?}" "${path:?}"
        fi
        chcon -t svirt_sandbox_file_t "${path:?}"
        }

    rmdata "${tempdir:?}"
    rmdata "${datadir:?}"

    mkdata "${tempdir:?}"
    mkdata "${datadir:?}"

# -----------------------------------------------------
# Configure our PostGIS container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" <<- EOF

        postgisname=postgis.1234
        postgislink=postgis.5678

        postgisdata=\${datadir:?}/postgis
        postgistemp=\${tempdir:?}/postgis

        postgisvol=/postgis
        postgisdb=postgisdb
        postgisuser=postgisuser
        postgispass=$(pwgen 20 1)

EOF

# -----------------------------------------------------
# Create our PostGIS data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    rmdata "${postgisdata:?}"
    rmdata "${postgistemp:?}"

    mkdata "${postgisdata:?}"
    mkdata "${postgistemp:?}"

# -----------------------------------------------------
# Run our PostGIS container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    postgisenv=$(mktemp)
    cat > "${postgisenv:?}" <<- EOF
PGDATA=${postgisvol:?}
POSTGRES_DB=${postgisdb:?}
POSTGRES_USER=${postgisuser:?}
POSTGRES_PASSWORD=${postgispass:?}
EOF

    docker run \
        --detach \
        --publish 5432:5432 \
        --name "${postgisname:?}" \
        --env-file "${postgisenv:?}" \
        --volume "${postgisdata:?}:${postgisvol:?}" \
        astrotrop/postgis:2.1

#
# We might need this ?
# GRANT ALL PRIVILEGES ON DATABASE postgisdb TO postgisuser;


# -----------------------------------------------------
# Configure our RStudio container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" << EOF

        rstudioname=rstudio
        rstudiolink=rstudio

        rstudiodata=\${datadir:?}/rstudio
        rstudiotemp=\${tempdir:?}/rstudio

EOF

# -----------------------------------------------------
# Create our RStudio data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    rmdata "${rstudiotemp:?}"
    rmdata "${rstudiodata:?}"

    mkdata "${rstudiotemp:?}"
    mkdata "${rstudiodata:?}"

# -----------------------------------------------------
# Download our RStudio test data.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${rstudiodata:?}"
        if [ ! -e geostats ]
        then
            if [ ! -e geostats.zip ]
            then
                wget https://dl.dropboxusercontent.com/u/2703650/Courses/geostats/geostats.zip
            fi
            unzip geostats.zip
        fi
    popd

# -----------------------------------------------------
# Run our RStudio container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

#   rstudioenv=$(mktemp)
#   cat > "${rstudioenv:?}" <<- EOF
#EOF
#   --env-file "${rstudioenv:?}" \

    docker run \
        --detach \
        --publish 8787:8787 \
        --name "${rstudioname:?}" \
        --link "${postgisname:?}:${postgislink:?}" \
        --volume "${rstudiotemp:?}:/temp" \
        --volume "${rstudiodata:?}:/data" \
        astrotrop/rstudio:1.0

# -----------------------------------------------------
# Test our RStudio container.
#[user@desktop]

    #
    # Connect using web browser
    firefox 'http://eta.virtual.metagrid.co.uk:8787/' &

# -----------------------------------------------------
# Install the PostgreSQL drivers.
# https://code.google.com/p/rpostgresql/
#[RStudio]

    #
    # Debian package is only available in testing (stretch) and unstable (sid).
    # https://packages.debian.org/sid/r-cran-rpostgresql

    install.packages("RPostgreSQL")

        Installing package into ‘/usr/local/lib/R/site-library’
        ....

    library(RPostgreSQL)

        Loading required package: DBI
        ....

    #
    # Check we can connect to PostgreSQL.
    # *username and password should come from env settings.

    drv <- dbDriver("PostgreSQL")
    con <- dbConnect(drv, dbname="postgisdb", host="postgis.5678", user="########", password="########")

    data <- dbGetQuery(con, "SELECT postgis_full_version()")
    View(data)

        POSTGIS="2.1.4 r12966" GEOS="3.4.2-CAPI-1.8.2 r3921" ....


# -----------------------------------------------------
# Install the GDAL tools.
#[RStudio]

    #
    # Debian package is available in jessie, wheezy and squeeze.
    # https://packages.debian.org/jessie/r-cran-sp

    install.packages("rgdal")

        Installing package into ‘/usr/local/lib/R/site-library’
        ....

    library(rgdal)

        Loading required package: sp
        rgdal: version: 1.1-3, (SVN revision 594)
        Geospatial Data Abstraction Library extensions to R successfully loaded]
        ....

# -----------------------------------------------------
# Loading vector data into PostGIS from R.
# https://rpubs.com/dgolicher/6373
#[RStudio]
 
    #
    # Import the test shapefiles.
    states<-readOGR('//data/geostats/shapefiles','mex_states')

        OGR data source with driver: ESRI Shapefile 
        Source: "//data/geostats/shapefiles", layer: "mex_states"
        with 51 features
        It has 15 fields

    #
    # Plot the test data.
    plot(states)
    box()
    axis(1)
    axis(2)
    grid()

    #
    # Export the test data to our database.
    # *username and password should come from env settings.
    writeOGR(
        states,
        "PG:dbname='postgisdb' host='postgis' user='########' password='########'",
        layer_options = "geometry_name=geom",
        "states",
        "PostgreSQL"
        )

    #
    # Try loading from QGIS.
    # dbname='postgisdb' host=eta.virtual.metagrid.co.uk port=5432 sslmode=disable key='ogc_fid' srid=4326 type=Polygon table="public"."states" (geom) sql=

    ....
    ....
    ....

# -----------------------------------------------------
# Configure our GeoServer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" << EOF

        geoservername=geoserver
        geoserverlink=geoserver

        geoserverdata=\${datadir:?}/geoserver
        geoservertemp=\${tempdir:?}/geoserver

EOF

# -----------------------------------------------------
# Create our GeoServer data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    rmdata "${geoservertemp:?}"
    rmdata "${geoserverdata:?}"

    mkdata "${geoservertemp:?}" "${tomcatuid:?}"
    mkdata "${geoserverdata:?}" "${tomcatuid:?}"

    #
    # TODO add gosu/notroot to our Tomcat container
    #

# -----------------------------------------------------
# Run our GeoServer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    geoserverenv=$(mktemp)
    cat > "${geoserverenv:?}" <<- EOF
EOF
# TODO GeoServer admin user and pass
# TODO PostGIS host, user and pass

    docker run \
        --detach \
        --publish 8080:8080 \
        --name "${geoservername:?}" \
        --env-file "${geoserverenv:?}" \
        --link "${postgisname:?}:${postgislink:?}" \
        --volume "${geoservertemp:?}:/temp" \
        --volume "${geoserverdata:?}:/data" \
        astrotrop/geoserver:1.0

    docker logs -f "${geoservername:?}"

# -----------------------------------------------------
# Test our GeoServer container.
#[user@desktop]

    #
    # Connect using web browser
    firefox 'http://eta.virtual.metagrid.co.uk:8080/geoserver/' &

    # The default username and password is admin and geoserver.
    # These can be changed by editing the security/users.properties
    # file in the GeoServer Data Directory.

# -----------------------------------------------------
# Create a GeoServer layer from our PostGIS data.
#[GeoServer]

    New workspace

        name : AstroTROP
        namespace : http://www.astrotrop.org/
        default : true

    New (vector) data store

        workspace : AstroTROP

        name : PostGIS database
        text : PostGIS database

        dbtype : postgis (default)
        host : postgis.5678 (from the Docker link name) 
        port : 5432
        database : postgisdb 
        schema : public
        user : ######## (from the Docker config) 
        pass : ########### (from the Docker config) 

    New (layer) resource
    
        from : AstroTROP:PostGIS
        layer : states
        action : publish

   Edit layer
   
        name  : MexicanStates   <-- no space
        title : Mexican States  <-- space ok

        Native Bounding Box
        (compute from data)

        Lat/Lon Bounding Box
        (compute from data)

# -----------------------------------------------------
# Add a background layer to QGIS.
#[QGIS]

    Web
     |
     +-- OpenLayers plugin
           |
           +-- OpenStreetMap
                 |
                 +-- OCM Landscape
    

# -----------------------------------------------------
# Display the PostGIS layer in QGIS.
#[QGIS]
        
    OpenGeo
        |
        +-- OpenGeo Explorer
              |
              +-- PostGIS connections
                    |
                    +-- ....
                    +-- ....
                    +-- New PostGIS connection

                          name : AstroTROP PostGIS server
                          host : eta.virtual.metagrid.co.uk
                          port : 5432
                          database : postgisdb
                          username : ########
                          password : ########

                    |
                    +-- ....
                    +-- ....
                    +-- AstroTROP PostGIS server
                          |
                          +-- ....
                          +-- ....
                          +-- public
                                |
                                +-- ....
                                +-- ....
                                +-- states
                                      |
                                      +-- ....
                                      +-- Add to current QGIS project

# -----------------------------------------------------
# Display the GeoServer layer in QGIS.
#[QGIS]
        
    OpenGeo
        |
        +-- OpenGeo Explorer
              |
              +-- GeoServer catalogs
                    |
                    +-- ....
                    +-- ....
                    +-- New catalog

                          name : AstroTROP GeoServer
                          url  : http://eta.virtual.metagrid.co.uk:8080/geoserver
                          user : ########
                          pass : ########

                    |
                    +-- ....
                    +-- ....
                    +-- AstroTROP GeoServer
                          |
                          +-- ....
                          +-- ....
                          +-- GeoServer layers
                                |
                                +-- ....
                                +-- ....
                                +-- Mexican States
                                      |
                                      +-- ....
                                      +-- Add to current QGIS project





# -----------------------------------------------------
# Run our CKAN-PostGIS container.
#[root@virtual]

    #
    # Is this the same DB as GeoServer/RStudio ? 
    #

# -----------------------------------------------------
# Run our CKAN-Redis container.
#[root@virtual]

# -----------------------------------------------------
# Run our CKAN-Solr container.
#[root@virtual]

# -----------------------------------------------------
# Run our CKAN-push container.
#[root@virtual]

# -----------------------------------------------------
# Run our CKAN container.
#[root@virtual]




    #
    # Setting the GeoServer data directory
    http://docs.geoserver.org/latest/en/user/datadirectory/data-dir-setting.html#data-dir-setting






