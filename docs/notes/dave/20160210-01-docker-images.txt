#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create our virtual machine.
#[user@desktop]

    createvm

        INFO : Node name [desouk]
        INFO : Base name [fedora-21-16G-20150407.qcow]
        INFO : Base path [/home/dave/projects/libvirt/base/fedora-21-16G-20150407.qcow]
        INFO : Disc name [desouk.qcow]
        INFO : Disc size [16GiB]

# -----------------------------------------
# Install admin tools.
#[root@virtual]

    yum -y install htop
    yum -y install pwgen
    
# -----------------------------------------------------
# Install and start the HAVEGE entropy generator.
# http://redmine.roe.ac.uk/issues/828
# http://blog-ftweedal.rhcloud.com/2014/05/more-entropy-with-haveged/
# http://stackoverflow.com/questions/26021181/not-enough-entropy-to-support-dev-random-in-docker-containers-running-in-boot2d/
#[root@virtual]

    yum install -y haveged
    systemctl enable haveged.service
    systemctl start  haveged.service

# -----------------------------------------------------
# Install and run Docker.
#[root@virtual]

    #
    # Install a specific version to avoid problems with updated storage driver.
    yum -y install https://kojipkgs.fedoraproject.org//packages/docker-io/1.6.2/3.gitc3ca5bb.fc21/x86_64/docker-io-1.6.2-3.gitc3ca5bb.fc21.x86_64.rpm
    systemctl enable docker.service
    systemctl start  docker.service
    systemctl status docker.service

# -----------------------------------------------------
# Configure our build.
#[root@virtual]

    cat > "${HOME:?}/astrotrop.conf" << EOF

        dockerset=1.1

        project=/var/local/astrotrop
        tempdir=\${project:?}/temp
        datadir=\${project:?}/data
        codedir=\${project:?}/code

EOF

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" << EOF

        dockerset=1.2

        astrotropsrc=${codedir:?}/astrotrop

EOF

# -----------------------------------------------------
# Install git source control.
#[root@virtual]

    yum -y install git

# -----------------------------------------------------
# Clone our source code.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    if [ ! -e "${astrotropsrc:?}" ]
    then
        mkdir --parent "$(dirname ${astrotropsrc:?})"
        pushd "$(dirname ${astrotropsrc:?})"
            git clone https://github.com/astrotrop/astrotrop.git "$(basename ${astrotropsrc:?})"
        popd
    else
        pushd "${astrotropsrc:?}"
            git pull
        popd
    fi

# -----------------------------------------------------
# Build our Fedora containers.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${astrotropsrc:?}"
        pushd src/docker

            docker build \
                --tag "astrotrop/fedora:22-${dockerset:?}" \
                base/fedora

        popd
    popd

# -----------------------------------------------------
# Build our Apache containers.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${astrotropsrc:?}"
        pushd src/docker

            docker build \
                --tag "astrotrop/apache-base:${dockerset:?}" \
                base/apache/base

            docker build \
                --tag "astrotrop/apache-wsgi:${dockerset:?}" \
                base/apache/wsgi

            docker build \
                --tag "astrotrop/apache-proxy:${dockerset:?}" \
                base/apache/proxy

        popd
    popd

# -----------------------------------------------------
# Build our PostGIS container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${astrotropsrc:?}"
        pushd src/docker

            docker build \
                --tag "astrotrop/postgis:${dockerset:?}" \
                base/postgis

        popd
    popd

# -----------------------------------------------------
# Build our RStudio container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${astrotropsrc:?}"
        pushd src/docker

            docker build \
                --tag "astrotrop/rstudio:${dockerset:?}" \
                R/rstudio

        popd
    popd

# -----------------------------------------------------
# Build our Java containers.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${astrotropsrc:?}"
        pushd src/docker

            docker build \
                --tag "astrotrop/java:8-${dockerset:?}" \
                base/java

            docker build \
                --tag "astrotrop/tomcat:8-${dockerset:?}" \
                base/tomcat

        popd
    popd

# -----------------------------------------------------
# Build our GeoServer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${astrotropsrc:?}"
        pushd src/docker

            docker build \
                --tag "astrotrop/geoserver:${dockerset:?}" \
                geo/geoserver

        popd
    popd

# -----------------------------------------------------
# Build our GeoNode container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${astrotropsrc:?}"
        pushd src/docker
        
            docker build \
                --tag "astrotrop/geonode:${dockerset:?}" \
                geo/geonode/
            
        popd
    popd

