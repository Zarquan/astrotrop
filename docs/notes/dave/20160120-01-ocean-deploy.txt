#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create our virtual machines.
#[user@desktop]

    droplet : Docker on Ubuntu-14.04

       1 CPU 
      1G memory
     30G disk space

    ipv4 : 46.101.92.169
    ipv6 : 2a03:b0c0:1:a1::22:1001

# -----------------------------------------------------
# Update our DNS records.
#[admin@network]

        $ORIGIN metagrid.co.uk

        ;
        ; Digital Ocean machines.
    +   astrotrop-04.ocean    A       46.101.92.169
    +   astrotrop-04.ocean    AAAA    2a03:b0c0:1:a1::22:1001

        $ORIGIN metagrid.xyz

    +   geoserv-04  CNAME  astrotrop-04.ocean.metagrid.co.uk.
    +   rstudio-04  CNAME  astrotrop-04.ocean.metagrid.co.uk.
    +   postgis-04  CNAME  astrotrop-04.ocean.metagrid.co.uk.


# -----------------------------------------------------
# Check our DNS records.
#[user@desktop]

    host geoserv-04.metagrid.xyz

        geoserv-04.metagrid.xyz is an alias for astrotrop-04.ocean.metagrid.co.uk.
        astrotrop-04.ocean.metagrid.co.uk has address 46.101.92.169
        astrotrop-04.ocean.metagrid.co.uk has IPv6 address 2a03:b0c0:1:a1::22:1001

    host rstudio-04.metagrid.xyz

        rstudio-04.metagrid.xyz is an alias for astrotrop-04.ocean.metagrid.co.uk.
        astrotrop-04.ocean.metagrid.co.uk has address 46.101.92.169
        astrotrop-04.ocean.metagrid.co.uk has IPv6 address 2a03:b0c0:1:a1::22:1001

    host postgis-04.metagrid.xyz

        postgis-04.metagrid.xyz is an alias for astrotrop-04.ocean.metagrid.co.uk.
        astrotrop-04.ocean.metagrid.co.uk has address 46.101.92.169
        astrotrop-04.ocean.metagrid.co.uk has IPv6 address 2a03:b0c0:1:a1::22:1001

# -----------------------------------------------------
# Update our SSH config.
#[user@desktop]

    gedit "${HOME:?}/.ssh/config" &

    +   Host astrotrop-04
    +       User root
    +       HostName %h.ocean.metagrid.co.uk
    +       IdentityFile ~/.ssh/zrq.digitalocean.com.rsa
    +       Protocol 2
    +       Compression yes
    +       PasswordAuthentication no

# -----------------------------------------
# SSH login to the server.
#[user@desktop]

    ssh astrotrop-04

# -----------------------------------------
# Disable plain text password login.
#[root@virtual]

    sed -i '
        s/^#PasswordAuthentication.*$/PasswordAuthentication no/
        ' /etc/ssh/sshd_config

    service ssh restart

# -----------------------------------------
# Install admin tools.
#[root@virtual]

    apt-get update

    apt-get -y install htop
    apt-get -y install pwgen
    
# -----------------------------------------------------
# Check Docker is installed and running..
#[root@virtual]

    docker info

        Containers: 0
        Images: 0
        Server Version: 1.9.1
        Storage Driver: aufs
         Root Dir: /var/lib/docker/aufs
         Backing Filesystem: extfs
         Dirs: 0
         Dirperm1 Supported: false
        Execution Driver: native-0.2
        Logging Driver: json-file
        Kernel Version: 3.13.0-68-generic
        Operating System: Ubuntu 14.04.3 LTS
        CPUs: 1
        Total Memory: 994 MiB
        Name: astrotrop-04
        ID: 727Z:HBAV:IJVT:THYM:YMDS:T4BV:WAZ3:ARFI:J2BF:GIWM:6CPR:4YUZ

# -----------------------------------------------------
# Configure our build.
#[root@virtual]

    cat > "${HOME:?}/astrotrop.conf" << EOF

        dockerset=1.1

        project=/var/local/astrotrop
        tempdir=\${project:?}/temp
        datadir=\${project:?}/data

        tomcatuid=995:994

EOF

# -----------------------------------------------------
# Create our data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    rmdata()
        {
        local path=${1:?}
        if [ -e "${path}" ]
        then
            rm -rf "${path}"
        fi
        }

    mkdata()
        {
        local path=${1:?}
        local user=${2:-}
        if [ ! -e "${path}" ]
        then
            mkdir --parents "${path:?}"
        fi
        if [ -n "${user:-}" ]
        then
            chown -R "${user:?}" "${path:?}"
        fi

        # Only if SELinux enabled        
        # chcon -t svirt_sandbox_file_t "${path:?}"

        }

    rmdata "${tempdir:?}"
    rmdata "${datadir:?}"

    mkdata "${tempdir:?}"
    mkdata "${datadir:?}"

# -----------------------------------------------------
# Configure our PostGIS container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" <<- EOF

        postgisname=postgis
        postgislink=postgis

        postgisdatadir=\${datadir:?}/postgis
        postgistempdir=\${tempdir:?}/postgis

        postgisdatabase=postgisdatabase
        postgisusername=postgisusername
        postgispassword=$(pwgen 20 1)

EOF

# -----------------------------------------------------
# Create our PostGIS data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    rmdata "${postgisdatadir:?}"
    rmdata "${postgistempdir:?}"

    mkdata "${postgisdatadir:?}"
    mkdata "${postgistempdir:?}"

# -----------------------------------------------------
# Run our PostGIS container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    postgisenv=$(mktemp)
    cat > "${postgisenv:?}" <<- EOF
PGDATA=/data
POSTGRES_DB=${postgisdatabase:?}
POSTGRES_USER=${postgisusername:?}
POSTGRES_PASSWORD=${postgispassword:?}
EOF

    docker run \
        --detach \
        --publish 5432:5432 \
        --name "${postgisname:?}" \
        --env-file "${postgisenv:?}" \
        --volume "${postgisdatadir:?}:/data" \
        --volume "${postgistempdir:?}:/temp" \
        "astrotrop/postgis:${dockerset:?}"

# -----------------------------------------------------
# Configure our RStudio container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" << EOF

        rstudiouser=astrotrop
        rstudiopass=$(pwgen 20 1)

        rstudioname=rstudio
        rstudiolink=rstudio

        rstudiodatadir=\${datadir:?}/rstudio
        rstudiotempdir=\${tempdir:?}/rstudio

EOF

# -----------------------------------------------------
# Create our RStudio data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    rmdata "${rstudiotempdir:?}"
    rmdata "${rstudiodatadir:?}"

    mkdata "${rstudiotempdir:?}"
    mkdata "${rstudiodatadir:?}"

# -----------------------------------------------------
# Download our RStudio test data.
#[root@virtual]

    apt-get -y install wget
    apt-get -y install unzip

    source "${HOME:?}/astrotrop.conf"
    pushd "${rstudiodatadir:?}"
        if [ ! -e geostats ]
        then
            if [ ! -e geostats.zip ]
            then
                wget https://dl.dropboxusercontent.com/u/2703650/Courses/geostats/geostats.zip
            fi
            unzip geostats.zip
        fi
    popd

# -----------------------------------------------------
# Run our RStudio container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    rstudioenv=$(mktemp)
    cat > "${rstudioenv:?}" <<- EOF
EOF

    cat > "${rstudiodatadir:?}/environ" <<- EOF
POSTGRES_DATABASE=${postgisdatabase:?}
POSTGRES_HOSTNAME=${postgislink:?}
POSTGRES_USERNAME=${postgisusername:?}
POSTGRES_PASSWORD=${postgispassword:?}
EOF

    docker run \
        --detach \
        --publish 8787:8787 \
        --name "${rstudioname:?}" \
        --env-file "${rstudioenv:?}" \
        --link "${postgisname:?}:${postgislink:?}" \
        --volume "${rstudiotempdir:?}:/temp" \
        --volume "${rstudiodatadir:?}:/data" \
        "astrotrop/rstudio:${dockerset:?}"

# -----------------------------------------------------
# Test our RStudio container.
#[user@desktop]

    #
    # Connect using web browser
    firefox 'http://rstudio-04.metagrid.xyz:8787/' &


# -----------------------------------------------------
# Read our environment config file
#[RStudio]

    readRenviron("/data/environ")

    Sys.getenv(
        "POSTGRES_DATABASE"
        )

# -----------------------------------------------------
# Install the PostgreSQL drivers.
# https://code.google.com/p/rpostgresql/
#[RStudio]

    #
    # Debian package is only available in testing (stretch) and unstable (sid).
    # https://packages.debian.org/sid/r-cran-rpostgresql

    install.packages("RPostgreSQL")

        Installing package into ‘/usr/local/lib/R/site-library’
        ....

    library(RPostgreSQL)

        Loading required package: DBI
        ....

    #
    # Check we can connect to PostgreSQL.
    # *username and password should come from env settings.
    dbname <- Sys.getenv("POSTGRES_DATABASE")
    dbhost <- Sys.getenv("POSTGRES_HOSTNAME")
    dbuser <- Sys.getenv("POSTGRES_USERNAME")
    dbpass <- Sys.getenv("POSTGRES_PASSWORD")

    drv <- dbDriver("PostgreSQL")
    con <- dbConnect(drv, dbname=dbname, host=dbhost, user=dbuser, password=dbpass)

    data <- dbGetQuery(con, "SELECT postgis_full_version()")
    View(data)

        POSTGIS="2.1.4 r12966" GEOS="3.4.2-CAPI-1.8.2 r3921" ....


    implode <- function(..., sep='')
        {
        paste(..., collapse=sep)
        }

    pgdsn <- implode(
        c(
            "PG:dbname=",
            dbname,        
            " ",
            "host=",
            dbhost,        
            " ",
            "user=",
            dbuser,        
            " ",
            "password=",
            dbpass
            )
        )

# -----------------------------------------------------
# Install the GDAL tools.
#[RStudio]

    #
    # Debian package is available in jessie, wheezy and squeeze.
    # https://packages.debian.org/jessie/r-cran-sp

    install.packages("rgdal")

        Installing package into ‘/usr/local/lib/R/site-library’
        ....

    library(rgdal)

        Loading required package: sp
        rgdal: version: 1.1-3, (SVN revision 594)
        Geospatial Data Abstraction Library extensions to R successfully loaded]
        ....

# -----------------------------------------------------
# Loading vector data into PostGIS from R.
# https://rpubs.com/dgolicher/6373
#[RStudio]
 
    #
    # Import the test shapefiles.
    states<-readOGR('/data/geostats/shapefiles','mex_states')

        OGR data source with driver: ESRI Shapefile 
        Source: "//data/geostats/shapefiles", layer: "mex_states"
        with 51 features
        It has 15 fields

    #
    # Plot the test data.
    plot(states)
    box()
    axis(1)
    axis(2)
    grid()

    #
    # Export the test data to our database.
    # *username and password should come from env settings.
    writeOGR(
        states,
        pgdsn,
        layer_options = "geometry_name=geom",
        "states",
        "PostgreSQL"
        )

    #
    # Try loading from QGIS.
    # dbname='postgisdatabase' host=eta.virtual.metagrid.co.uk port=5432 sslmode=disable key='ogc_fid' srid=4326 type=Polygon table="public"."states" (geom) sql=

    ....
    ....
    ....

# -----------------------------------------------------
# Configure our GeoServer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" << EOF

        geoservername=geoserver
        geoserverlink=geoserver

        geoserverdata=\${datadir:?}/geoserver
        geoservertemp=\${tempdir:?}/geoserver

EOF

# -----------------------------------------------------
# Create our GeoServer data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    rmdata "${geoservertemp:?}"
    rmdata "${geoserverdata:?}"

    mkdata "${geoservertemp:?}" "${tomcatuid:?}"
    mkdata "${geoserverdata:?}" "${tomcatuid:?}"

    #
    # TODO add gosu/notroot to our Tomcat container
    #

# -----------------------------------------------------
# Run our GeoServer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    geoserverenv=$(mktemp)
    cat > "${geoserverenv:?}" <<- EOF
# TODO GeoServer admin user and pass
# TODO PostGIS host, user and pass
EOF

    docker run \
        --detach \
        --publish 8080:8080 \
        --name "${geoservername:?}" \
        --env-file "${geoserverenv:?}" \
        --link "${postgisname:?}:${postgislink:?}" \
        --volume "${geoservertemp:?}:/temp" \
        --volume "${geoserverdata:?}:/data" \
        "astrotrop/geoserver:${dockerset:?}"

    docker logs -f "${geoservername:?}"

# -----------------------------------------------------
# Test our GeoServer container.
#[user@desktop]

    #
    # Connect using web browser
    firefox 'http://geoserv-04.metagrid.xyz:8080/geoserver/' &

    # The default username and password can be changed by editing the
    # security/users.properties file in the GeoServer Data Directory.


    cat /data/security/usergroup/default/users.xml  

        <?xml version="1.0" encoding="UTF-8" standalone="no"?>
        <userRegistry xmlns="http://www.geoserver.org/security/users" version="1.0">
            <users>
                <user enabled="true" name="astrotrop" password="crypt1:3P0YuQQKSvaF2KgKU+w1AeYHnYhtnSslj+LQJkgO+AM="/>
            </users>
            <groups/>
        </userRegistry>


# -----------------------------------------------------
# Create a GeoServer layer from our PostGIS data.
#[GeoServer]

    New workspace

        name : AstroTROP
        namespace : http://www.astrotrop.org/
        default : true

    New (vector) data store

        workspace : AstroTROP

        name : PostGIS database
        text : PostGIS database

        dbtype : postgis (default)
        host : postgislink (from the Docker link name) 
        port : 5432
        database : postgisdatabase (from the Docker config) 
        schema : public
        user : postgisusername (from the Docker config) 
        pass : ############### (from the Docker config) 

    New (layer) resource
    
        from   : AstroTROP:PostGIS
        layer  : states
        action : publish

   Edit layer
   
        name  : MexicanStates   <-- no space
        title : Mexican States  <-- space ok

        Native Bounding Box
        (compute from data)

        Lat/Lon Bounding Box
        (compute from data)

# -----------------------------------------------------
# Add a background layer to QGIS.
#[QGIS@desktop]


    Plugins
     |
     +-- OpenLayers plugin
           |
           +-- Install
    
    Web
     |
     +-- OpenLayers plugin
           |
           +-- OpenStreetMap
                 |
                 +-- OCM Landscape
    

# -----------------------------------------------------
# Display our PostGIS layer in QGIS.
#[QGIS@desktop]

      +-- PostGIS
            |
            +-- ....
            +-- ....
            +-- New PostGIS connection

                name : AstroTROP PostGIS server
                host : postgis-04.metagrid.xyz
                port : 5432

                database : postgisdatabase (from the Docker config) 
                username : postgisusername (from the Docker config) 
                password : ############### (from the Docker config) 


      +-- PostGIS
            |
            +-- ....
            +-- ....
            +-- AstroTROP PostGIS server
                  |
                  +-- ....
                  +-- ....
                  +-- public
                        |
                        +-- ....
                        +-- ....
                        +-- states
                              |
                              +-- ....
                              +-- Add Layer

# -----------------------------------------------------
# Display the GeoServer WFS layer in QGIS.
#[QGIS@desktop]

      +-- WFS
           |
           +-- ....
           +-- ....
           +-- New connection

               Name : AstroTROP GeoServer WFS
               URL  : http://geoserv-04.metagrid.xyz:8080/geoserver/ows


      +-- WFS
           |
           +-- ....
           +-- ....
           +-- AstroTROP GeoServer WFS
                  |
                  +-- ....
                  +-- ....
                  +-- Mexican States
                        |
                        +-- ....
                        +-- Add Layer

    #
    # Layer does not perform as expected ..
    #


# -----------------------------------------------------
# Display the GeoServer WMS layer in QGIS.
#[QGIS@desktop]

      +-- WMS
           |
           +-- ....
           +-- ....
           +-- New connection

               Name : AstroTROP GeoServer WMS
               URL  : http://geoserv-04.metagrid.xyz:8080/geoserver/ows


      +-- WMS
           |
           +-- ....
           +-- ....
           +-- AstroTROP GeoServer WMS
                  |
                  +-- ....
                  +-- ....
                  +-- Mexican States
                        |
                        +-- ....
                        +-- Add Layer

# -----------------------------------------------------
# Control our GeoServer service from QGIS.
#[QGIS@desktop]

    Plugins
     |
     +-- GeoServer Explorer
           |
           +-- Install

       
    Web
     |
     +-- GeoServer
            |
            +-- GeoServer Explorer
                    |
                    +-- Catalogs
                           |
                           +-- ....
                           +-- ....
                           +-- New catalog

                               name : AstroTROP GeoServer
                               url  : http://geoserv-04.metagrid.xyz:8080/geoserver
                               user : ########
                               pass : ########


    Web
     |
     +-- GeoServer
            |
            +-- GeoServer Explorer
                    |
                    +-- Catalogs
                           |
                           +-- ....
                           +-- ....
                           +-- AstroTROP GeoServer
                                  |
                                  +-- ...
                                  +-- Workspaces
                                  +-- Layers
                                        |
                                        +-- ....
                                        +-- ....
                                        +-- Mexican States
                                              |
                                              +-- ....
                                              +-- Add to current QGIS project

# -----------------------------------------------------
# Add the PostgreSQL client to the host virtual machine.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    #
    # Install the PostgreSQL client.
    apt-get install postgresql-client

    #
    # Configure our PostgreSQL login 
    cat >  "${HOME:?}/.pgpass" << EOF
localhost:5432:${postgisdatabase:?}:${postgisusername:?}:${postgispassword:?}
EOF
    chmod u=rw,g=,o= "${HOME:?}/.pgpass"

    #
    # Login to our PostGIS database.
    psql \
        --host localhost \
        --username "${postgisusername:?}" \
        "${postgisdatabase:?}"

        \l
        \dt
        \q

# -----------------------------------------------------
# Run a database dump from the host virtual machine.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    pg_dump \
         --create \
        --host localhost \
        --username "${postgisusername:?}" \
        "${postgisdatabase:?}"

    # FAILS
    # pg_dump: server version: 9.4.5; pg_dump version: 9.3.10
    # pg_dump: aborting because of server version mismatch

# -----------------------------------------------------
# Run a database dump from inside the container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    docker \
        exec -it \
        "${postgisname:?}" \
        bash

        pg_dump \
            --user ${POSTGRES_USER} \
            ${POSTGRES_DB} \
            > /temp/pgdump-$(date --utc '+%Y%m%d%H%M%S')

        exit
        
    ls "${postgistempdir}"

# -----------------------------------------------------
# Create a test database from the host virtual machine
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    testdbname=$(pwgen 10 1)

    createdb \
        --host localhost \
        --username "${postgisusername:?}" \
        "${testdbname:?}"

    psql \
        --host localhost \
        --username "${postgisusername:?}" \
        "${testdbname:?}"



