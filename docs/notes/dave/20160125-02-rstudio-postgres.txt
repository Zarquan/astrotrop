#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Test our RStudio container.
#[user@desktop]

    #
    # Connect using web browser
    firefox 'http://rstudio-04.metagrid.xyz:8787/' &

# -----------------------------------------------------
# Read our environment config file
#[RStudio]

    readRenviron("/data/environ")

    Sys.getenv(
        "POSTGRES_DATABASE"
        )

# -----------------------------------------------------
# Install the PostgreSQL drivers.
# https://code.google.com/p/rpostgresql/
#[RStudio]

    #
    # Debian package is only available in testing (stretch) and unstable (sid).
    # https://packages.debian.org/sid/r-cran-rpostgresql

    install.packages("RPostgreSQL")

        #
        # Installing package into ‘/usr/local/lib/R/site-library’
        # ....

    library(RPostgreSQL)

        #
        # Loading required package: DBI
        # ....

    #
    # Check we can connect to PostgreSQL.
    # *username and password should come from env settings.
    dbname <- Sys.getenv("POSTGRES_DATABASE")
    dbhost <- Sys.getenv("POSTGRES_HOSTNAME")
    dbuser <- Sys.getenv("POSTGRES_USERNAME")
    dbpass <- Sys.getenv("POSTGRES_PASSWORD")

    drv <- dbDriver("PostgreSQL")
    con <- dbConnect(drv, dbname=dbname, host=dbhost, user=dbuser, password=dbpass)

    data <- dbGetQuery(con, "SELECT postgis_full_version()")
    View(data)

        #
        # POSTGIS="2.1.4 r12966" GEOS="3.4.2-CAPI-1.8.2 r3921" ....
        #


    implode <- function(..., sep='')
        {
        paste(..., collapse=sep)
        }

    pgdsn <- implode(
        c(
            "PG:dbname=",
            dbname,        
            " ",
            "host=",
            dbhost,        
            " ",
            "user=",
            dbuser,        
            " ",
            "password=",
            dbpass
            )
        )

# -----------------------------------------------------
# Install the GDAL tools.
#[RStudio]

    #
    # Debian package is available in jessie, wheezy and squeeze.
    # https://packages.debian.org/jessie/r-cran-sp

    install.packages("rgdal")

        #
        # Installing package into ‘/usr/local/lib/R/site-library’
        # ....

    library(rgdal)

        #
        # Loading required package: sp
        # rgdal: version: 1.1-3, (SVN revision 594)
        # Geospatial Data Abstraction Library extensions to R successfully loaded]
        # ....

# -----------------------------------------------------
# Loading vector data into PostGIS from R.
# https://rpubs.com/dgolicher/6373
#[RStudio]
 
    #
    # Import the test shapefiles.
    states<-readOGR('/data/geostats/shapefiles','mex_states')

        #
        # OGR data source with driver: ESRI Shapefile 
        # Source: "//data/geostats/shapefiles", layer: "mex_states"
        # with 51 features
        # It has 15 fields
        #

    #
    # Plot the test data.
    plot(states)
    box()
    axis(1)
    axis(2)
    grid()

    #
    # Export the test data to our database.
    # *username and password should come from env settings.
    writeOGR(
        states,
        pgdsn,
        layer_options = "geometry_name=geom",
        "states",
        "PostgreSQL"
        )


