#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create our virtual machine.
#[user@desktop]

    ischnura-createvm

        INFO : Node name [theta]
        INFO : Base name [fedora-21-16G-20150407.qcow]
        INFO : Base path [/var/lib/libvirt/images/base/fedora-21-16G-20150407.qcow]
        INFO : Disc name [theta.qcow]
        INFO : Disc size [16GiB]

# -----------------------------------------
# Install admin tools.
#[root@virtual]

    yum -y install htop
    yum -y install pwgen
    
# -----------------------------------------------------
# Install and start the HAVEGE entropy generator.
# http://redmine.roe.ac.uk/issues/828
# http://blog-ftweedal.rhcloud.com/2014/05/more-entropy-with-haveged/
# http://stackoverflow.com/questions/26021181/not-enough-entropy-to-support-dev-random-in-docker-containers-running-in-boot2d/
#[root@virtual]

    yum install -y haveged
    systemctl enable haveged.service
    systemctl start  haveged.service

# -----------------------------------------------------
# Install and run Docker.
#[root@virtual]

    #
    # Install a specific version to avoid problems with updated storage driver.
    yum -y install https://kojipkgs.fedoraproject.org//packages/docker-io/1.6.2/3.gitc3ca5bb.fc21/x86_64/docker-io-1.6.2-3.gitc3ca5bb.fc21.x86_64.rpm
    systemctl enable docker.service
    systemctl start  docker.service
    systemctl status docker.service

# -----------------------------------------------------
# Disable SELinux.
# chown: changing ownership of ‘/var/lib/postgresql/data’: Permission denied
#[root@virtual]

    setenforce permissive

    sed -i '
        s/^SELINUX=.*$/SELINUX=permissive/
        ' /etc/selinux/config

# -----------------------------------------
# Install source control tools.
#[root@virtual]

    yum -y install git

# -----------------------------------------------------
# Configure our build.
#[root@virtual]

    cat > "${HOME:?}/astrotrop.conf" << EOF

        project=/var/local/astrotrop
        tempdir=\${project:?}/temp
        datadir=\${project:?}/data

EOF

# -----------------------------------------------------
# Clone our source code.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    if [ ! -e "${project:?}/github" ]
    then
        mkdir --parent "${project:?}"
        pushd "${project:?}"
            git clone https://github.com/astrotrop/astrotrop.git github
        popd
    else
        pushd "${project:?}/github"
            git pull
        popd
    fi

# -----------------------------------------------------
# Build our base containers.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    pushd "${project:?}/github"
        pushd src/docker

            docker build \
                --tag astrotrop/fedora:22.1 \
                base/fedora

            docker build \
                --tag astrotrop/java:8.1 \
                base/java

            docker build \
                --tag astrotrop/tomcat:8.30 \
                base/tomcat

        popd
    popd

# -----------------------------------------------------
# Build our build containers.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    pushd "${project:?}/github"
        pushd src/docker

            docker build \
                --tag astrotrop/builder:1.0 \
                geo/builder

        popd
    popd


# -----------------------------------------------------
# Build the GeoExplorer webapp.
#[user@desktop]

    source "${HOME:?}/astrotrop.conf"
    pushd "${project:?}/github"
        pushd src/docker
            pushd geo/geoexplorer

                docker run -it --rm \
                    --volume "build.sh:/build.sh" \
                    --volume "$(pwd):/target" \
                    astrotrop/java:8.1 \
                    build.sh

            popd
        popd
    popd

# -----------------------------------------------------
# Build our GeoExplorer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    pushd "${project:?}/github"
        pushd src/docker

            docker build \
                --tag astrotrop/geoexplorer:1.0 \
                geo/geoexplorer

        popd
    popd

# -----------------------------------------------------
# Configure our GeoExplorer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    cat >> "${HOME:?}/astrotrop.conf" << EOF

        geoexplorername=geoexplorer
        geoexplorerlink=geoexplorer

        geoexplorerdata=\${datadir:?}/geoexplorer
        geoexplorertemp=\${tempdir:?}/geoexplorer

EOF

# -----------------------------------------------------
# Create our GeoExplorer data directories.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"
    
    rmdata "${geoexplorertemp:?}"
    rmdata "${geoexplorerdata:?}"

    mkdata "${geoexplorertemp:?}" "${tomcatuid:?}"
    mkdata "${geoexplorerdata:?}" "${tomcatuid:?}"

    #
    # TODO add gosu/notroot to our Tomcat container
    #

# -----------------------------------------------------
# Run our GeoExplorer container.
#[root@virtual]

    source "${HOME:?}/astrotrop.conf"

    geoexplorerenv=$(mktemp)
    cat > "${geoexplorerenv:?}" <<- EOF
EOF

    docker run \
        --detach \
        --publish 8081:8080 \
        --name "${geoexplorername:?}" \
        --env-file "${geoexplorerenv:?}" \
        --link "${geoservername:?}: ${geoserverlink:?}" \
        --volume "${geoexplorertemp:?}:/temp" \
        --volume "${geoexplorerdata:?}:/data" \
        astrotrop/geoexplorer:1.0

    docker logs -f "${geoexplorername:?}"

# -----------------------------------------------------
# Test our GeoExplorer container.
#[user@desktop]

    #
    # Connect using web browser
    firefox 'http://eta.virtual.metagrid.co.uk:8081/geoexplorer/' &

    #
    # Problem - internal and external DBNS names are different.

    # Externl client (firefox) needs to access the public, external interface of the VM.
    # http://eta.virtual.metagrid.co.uk:8080/geoserver/web/

    # The internal client (geoexplorer) needs to access the internal interface of the container.
    # http://geoserver:8080/geoserver/geoserver/web/

    # Running GeoServer and GeoExplorer in separate VMs solves this.
    



